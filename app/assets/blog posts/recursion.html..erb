<section class="blog-font blog-post">
  <p>My wife, <a href="http://sandrahallie.com/">a studious iOS developer</a>
  who is attending <a href="https:/www.udacity.com/course/ios-developer-nanodegree--nd003">
  Udacity's iOS nanodegree program</a>, asked me about recursion today. I've been asked 
  to describe it a few times from other people now, so I thought it would be a 
  good time to do some due deligence, research the topic, and report my findings 
  back to you.</p>
  
  <h3>Give me ONE sentence for recursion.</h3>
  
  <p>When a function calls itself within its body, that's recursion. That might sound a bit odd 
  at first, but the concept is best understood through an example.</p>
  
  <h3>An example.</h3>
  
  <p>So let's say we have a function:</p>
  
  <pre><code>var sayHello = function(helloString) {
  
};</code></pre>

  <p>Ok, so for now <code>sayHello</code> just takes <code>helloString</code> as its input. 
  Let's print the <code>helloString</code>.</p>
  
  <pre><code>var sayHello = function(helloString) {
  console.log(helloString);
};

sayHello("Hello there!"); // => Hello there!</code></pre>

  <p>Now what if, under the second line, we call the <code>sayHello</code> function 
  with <code>helloString</code> as its input?</p>
  
  <p>Let's try it.</p>
  
  <pre><code>var sayHello = function(helloString) {
  console.log(helloString);
  sayHello(helloString);
};

sayHello("Hello there!"); // => Hello there! Hello there!...</code></pre>

  <p>Oops! Apart from blowing our stack, you will notice that <code>helloString</code> gets logged 
  to the console an infinite amount of times -- or it would be an infinite amount of times if we had 
  infinite memory.</p>
  
  <p>The <code>sayHello</code> function is calling itself every time it hits that third line, 
  where it refers back to line 1 and repeats the process continuously. (Looks similar to a <code>while</code> 
  loop, doesn't it?)</p>
  
  <h3>Great, but when would you use it?</h3>
  
  <p>Recursion is an efficient solution when a problem can be separated into sub-problems, and when 
  the algorithm to solve those sub-problems is the same as the algorithm to solve the main problem.</p>
  
  <p>Recursion is also an excellent way to decrease the margin of error for a particular algorithm. It 
  is heavily used in the financial and scientific sectors, where the correctness of an algorithm becomes 
  critically important.</p>
  
  <p>Also, as we saw in the example above, most loops can also be re-written using recursion (it would 
  be easy to get the same output in the above example with the use of a <code>while</code> loop as 
  I hinted at beforehand) and, in fact, most programming languages frequently use recursion.</p>
  
  <h3>Need a real-world example?</h3>
  
  <p>A great real-world example I've come across is 
  <a href="https://www.quora.com/What-are-some-examples-of-recursion-in-the-real-world">
  Thomas Corman's answer</a> to the question, which I have provided here for convenience:</p>
  
  <p>"Manitoulin Island.  It's in Lake Huron and the largest island in a lake in the world. 
  It's large enough that it contains lakes.  And some of the lakes are large enough that 
  they contain islands.  Some of these islands are reputed to contain ponds, but I have 
  never seen confirmation.</p>
  
  <p>For more real-world examples, 
  <a href="http://stackoverflow.com/questions/105838/real-world-examples-of-recursion">
  read these examples.</a></p>

</section>